plugins {
    id "java-library"
    id "io.freefair.lombok"
}

group "tech.kronicle"
archivesBaseName = "kronicle-utils"
description "Kronicle utils library that contains utility classes for use by Kronicle and its plugins"

apply from: "$rootDir/gradle/publish.gradle"

dependencies {
    annotationProcessor platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
    implementation platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
    compileOnly platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
    testAnnotationProcessor platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
    testImplementation platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
    
    compileOnly "com.github.spotbugs:spotbugs-annotations:$spotBugsVersion"
    testCompileOnly "com.github.spotbugs:spotbugs-annotations:$spotBugsVersion"
    compileOnly "javax.inject:javax.inject:$javaxInjectApiVersion"
    testCompileOnly "javax.inject:javax.inject:$javaxInjectApiVersion"

    api project(":sdk")
    api project(":common")
    // Needed for "org.springframework.util.AntPathMatcher"
    implementation "org.springframework:spring-core"
    implementation "com.fasterxml.jackson.core:jackson-databind"

    testImplementation project(":service-test-utils")
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.mockito:mockito-junit-jupiter"
    testImplementation "com.google.guava:guava:$guavaVersion"
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    maxParallelForks = Math.min(2, Runtime.runtime.availableProcessors().intdiv(2) ?: 1)
}
