plugins {
    id "java-library"
    id "io.freefair.lombok"
}

group "tech.kronicle"
archivesBaseName = "kronicle-sdk"
description "Kronicle sdk library that contains Kronicle's data classes"

apply from: "$rootDir/gradle/publish.gradle"

dependencies {
    annotationProcessor platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
    annotationProcessor platform("org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion")
    implementation platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion")
    compileOnly platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
    compileOnly platform("org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion")
    testAnnotationProcessor platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
    testAnnotationProcessor platform("org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion")
    testImplementation platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
    testImplementation platform("org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion")

    compileOnly "com.github.spotbugs:spotbugs-annotations:$spotBugsVersion"
    testCompileOnly "com.github.spotbugs:spotbugs-annotations:$spotBugsVersion"

    // Resolves performance vulnerability https://github.com/FasterXML/jackson-databind/issues/2816
    // TODO: Remove platform once a version of Spring Boot is released that includes this fix
    implementation platform("com.fasterxml.jackson:jackson-bom:2.13.2.20220324")
    implementation "com.fasterxml.jackson.core:jackson-databind"

    implementation "jakarta.validation:jakarta.validation-api"
    implementation "org.hibernate.validator:hibernate-validator"
    implementation project(":graphql-java-code-first-annotations")

    testImplementation "org.springframework.boot:spring-boot-starter-test", {
        exclude group: "junit", module: "junit"
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.mockito:mockito-junit-jupiter"
    testImplementation "org.springframework.boot:spring-boot-starter-webflux"
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    maxParallelForks = Math.min(2, Runtime.runtime.availableProcessors().intdiv(2) ?: 1)
}
